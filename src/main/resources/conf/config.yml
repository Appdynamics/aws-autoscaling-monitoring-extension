#Use the following metricPrefix if SIM is enabled.
#metricPrefix: "Custom Metrics|Amazon AutoScaling|"
#Use the following metricPrefix if SIM is not enabled.
metricPrefix: "Server|Component:<COMPONENT_ID>|Custom Metrics|Amazon AutoScaling|"

#Allowed values are Basic and Detailed. Refer https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html for more information
# Basic will fire CloudWatch API calls every 5 minutes
# Detailed will fire CloudWatch API calls every 1 minutes
cloudWatchMonitoring: "Basic"
#If you want to run the extension with a further delay, comment the "cloudWatchMonitoring" and use the following field
#which takes in the number of minutes after which th extension should call the cloudwatch metrics
#cloudWatchMonitoringInterval:10
concurrencyConfig:
  noOfAccountThreads: 3
  noOfRegionThreadsPerAccount: 3
  noOfMetricThreadsPerRegion: 3

# Regions where elastiCache is registered
# Allowed values: ap-southeast-1, ap-southeast-2, ap-northeast-1, eu-central-1,
#                 us-east-1, eu-west-1, us-west-1, us-west-2, sa-east-1
#
accounts:
  - awsAccessKey: ""
    awsSecretKey: ""
    displayAccountName: "AppD"
    regions: ["us-east-1"]

credentialsDecryptionConfig:
  enableDecryption: "false"
  encryptionKey:

proxyConfig:
  host:
  port:
  username:
  password:

autoScalingGroupNames: []

# Global metrics config for all accounts
metricsConfig:
  # Rate limit ( per second ) for GetMetricStatistics, default value is 400. https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_limits.html
  getMetricStatisticsRateLimit: 400
  # The max number of retry attempts for failed retryable requests
  # (ex: 5xx error responses from a service) or throttling errors
  maxErrorRetrySize: 0
  # Global time range configuration, applicable to all the metrics configured below.
  metricsTimeRange:
    startTimeInMinsBeforeNow: 5
    endTimeInMinsBeforeNow: 0
  # By default, all metrics retrieved from cloudwatch are 'Average' values.
  # This option allows you to override the metric type.
  # Allowed statTypes are: ave, max, min, sum, samplecount
  # Note: Irrespective of the metric type, value will still be reported as
  # Observed value to the Controller
  # Time range configuration to individual metrics also supported. If not configured uses the global time range configuration
  #    metricsTimeRange:
  #       startTimeInMinsBeforeNow: 15
  #       endTimeInMinsBeforeNow: 0
  includeMetrics:
    - name: "GroupMinSize"
      alias: "GroupMinSize"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupMaxSize"
      alias: "GroupMaxSize"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupDesiredCapacity"
      alias: "GroupDesiredCapacity"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupInServiceInstances"
      alias: "GroupInServiceInstances"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupPendingInstances"
      alias: "GroupPendingInstances"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupStandbyInstances"
      alias: "GroupStandbyInstances"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupTerminatingInstances"
      alias: "GroupTerminatingInstances"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"
    - name: "GroupTotalInstances"
      alias: "GroupTotalInstances"
      statType: "ave"
      delta: false
      multiplier: 1
      timeRollUpType: "AVERAGE"
      clusterRollUpType: "INDIVIDUAL"

regionEndPoints:
  ap-southeast-2: monitoring.ap-southeast-2.amazonaws.com
  ap-northeast-1: monitoring.ap-northeast-1.amazonaws.com
  ap-southeast-1: monitoring.ap-southeast-1.amazonaws.com
  eu-central-1: monitoring.eu-central-1.amazonaws.com
  eu-west-1: monitoring.eu-west-1.amazonaws.com
  us-east-1: monitoring.us-east-1.amazonaws.com
  us-west-1: monitoring.us-west-1.amazonaws.com
  us-west-2: monitoring.us-west-2.amazonaws.com
  sa-east-1: monitoring.sa-east-1.amazonaws.com

# If any of the following fields are not set, the values of the specific fields are set from the system properties of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent configFile.
controllerInfo:
  controllerHost: "" # -Dappdynamics.controller.hostName
  controllerPort: 8090 # -Dappdynamics.controller.port
  controllerSslEnabled: false # -Dappdynamics.controller.ssl.enabled
  enableOrchestration: false # N/A
  uniqueHostId: "" # -Dappdynamics.agent.uniqueHostId
  username: "" # -Dappdynamics.agent.monitors.controller.username
  password: "" # -Dappdynamics.agent.monitors.controller.password
  encryptedPassword: "" # -Dappdynamics.agent.monitors.controller.encryptedPassword
  accountAccessKey: "" # -Dappdynamics.agent.accountAccessKey
  account: "" # -Dappdynamics.agent.accountName
  machinePath: "" # -Dappdynamics.machine.agent.hierarchyPath
  simEnabled: false # -Dappdynamics.sim.enabled
  applicationName: "" # -Dappdynamics.agent.applicationName
  tierName: "" # -Dappdynamics.agent.tierName
  nodeName: "" # -Dappdynamics.agent.nodeName

#Encryption key for your controllerInfo password
encryptionKey: "abcd"
